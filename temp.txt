
import java.time.LocalDate;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name="Danske_Customer")
public class Customer {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="Customer_Id")
	private long customerId;
    @Column(name="Name",nullable = false,length = 75)
	private String name;
    @Temporal(value = TemporalType.DATE)
    @Column(name="DOB")
	private LocalDate dob;
    @Column(name="Mobile_No")
	private long mobileNo;
    //relationship
    @OneToMany(mappedBy = "customer",fetch = FetchType.LAZY,cascade = CascadeType.ALL)
    private List<Loan> loans;
    
    
}
-------------------------------------------

import java.time.LocalDate;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
@Entity
@Table(name="Danske_Loan")
public class Loan {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name="Loan_No")
     private long loanNo;
	@Column(name="Loan_Type",nullable =false,length = 100)
     private String loanType;
	@Column(name="Amount")
     private long amount;
	@Column(name="ROI")
     private float roi;
	@Column(name="Tenure")
     private int tenure;
	@Temporal(value=TemporalType.DATE)
	@Column(name="Issue_Date")
	 private LocalDate issueDate;
	//relationship
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Customer_Id",nullable = false)
	private Customer customer;
}
